
import { Component, OnInit, ViewChild } from '@angular/core';

import { AtlasenseapiService } from '../api.service';
import { ASDocument } from '../document';
import { Filter, FilterItem } from '../filter';
import { Response } from '@angular/http';
import { Observable } from 'rxjs/Observable';

import { MDOCUMENTS } from './mock-document';

import 'rxjs/add/operator/toPromise';
import { ContextMenuComponent } from '../context-menu/context-menu.component';

@Component({
  selector: 'app-results',
  templateUrl: './results.component.html',
  styleUrls: ['./results.component.css']
})

export class ResultsComponent implements OnInit {

  documents: ASDocument[] = [];
  selectedDocument: ASDocument;
  promisedDocument: ASDocument;
  totalResults = 0;
  sortType = "Last Modified";
  sortDirection = "desc";
  viewType = "List";


  dataSourceFilterItems: FilterItem [] = [{itemName: "Gmail", selected: true},
                                          {itemName: "Slack", selected: false},
                                          {itemName: "Confluence", selected: false},
                                          {itemName: "Facebook", selected: false},
                                          ];

  groupFilterItems: FilterItem [] = [{itemName: "Group1", selected: false},
                                     {itemName: "Group2", selected: false},
                                     {itemName: "Group3", selected: false},
                                     {itemName: "Group4", selected: false},
                                      ];
  categoryFilterItems: FilterItem [] = [{itemName: "Cat1", selected: false},
                                        {itemName: "Cat2", selected: false},
                                        {itemName: "Cat3", selected: false},
                                        {itemName: "Cat4", selected: false},
                                        ];
  peopleFilterItems: FilterItem [] = [{itemName: "Aditya", selected: false},
                                      {itemName: "Aria", selected: false},
                                      {itemName: "Nicole", selected: false},
                                      {itemName: "Mayda", selected: false},
                                      ];                                         
  emptyFilterItems: FilterItem[];

  filters: Filter[] = [{filterName: "Data Sources", filterType: "CheckBox", open: true, filterData: this.dataSourceFilterItems},
             {filterName: "Groups", filterType: "CheckBox", open: false, filterData: this.groupFilterItems},
             {filterName: "Date Range", filterType: "Date", open: true, filterData: this.emptyFilterItems},
             {filterName: "Categories", filterType: "CheckBox", open: false, filterData: this.categoryFilterItems},
             {filterName: "People", filterType: "CheckBox", open: false, filterData: this.peopleFilterItems}];


  constructor(private documentViewerService: AtlasenseapiService) { }

  ngOnInit(): void {
      // this.documents = this.documentViewerService.getDocuments();
      this.documents = MDOCUMENTS;
      this.totalResults = MDOCUMENTS.length;
  }

  onSelect(document: ASDocument): void {
      this.selectedDocument = document;
  }

  toggleViewType(): void {
      if (this.viewType === 'List') {
        this.viewType = 'Grid';
      } else {
        this.viewType = 'List';
      }
  }

  getTestDoc(): void {
    this.documentViewerService.get(`http://130.211.100.71/zeo0/account1/ramon@atlasense.com/3a663ff54eac4e71acd3f6b7ea983fb1/0188345893c24ee29ae8b0f881ed8474`).toPromise()
      .then(response => response.json().data as ASDocument)
      .catch(this.handleError);
  }
  private handleError(error: any): Promise<any> {
  console.error('An error occurred', error); // for demo purposes only
  return Promise.reject(error.message || error);
  }
  public items = [
      { name: 'John', otherProperty: 'Foo' },
      { name: 'Joe', otherProperty: 'Bar' }
  ];
  @ViewChild('basicMenu') public basicMenu: ContextMenuComponent;
}
