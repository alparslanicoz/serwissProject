{"version":3,"file":"websocket.service.js","sourceRoot":"","sources":["../../src/lib/websocket.service.ts"],"names":[],"mappings":"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","sourcesContent":["// copied from https://raw.githubusercontent.com/afrad/angular2-websocket\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport { AtlasenseapiService } from './api.service';\nimport { AuthService } from './auth.service';\nimport { ConfigurationService } from './config.service';\n\nconst WEBSOCKET_URL = '@ws';\nconst WEBSOCKET_TOKEN_URL = '@wstoken';\n\n@Injectable()\nexport class $WebSocket {\n\n    private static Helpers = class {\n        static isPresent(obj: any): boolean {\n            return obj !== undefined && obj !== null;\n        }\n\n        static isString(obj: any): boolean {\n            return typeof obj === 'string';\n        }\n\n        static isArray(obj: any): boolean {\n            return Array.isArray(obj);\n        }\n\n        static isFunction(obj: any): boolean {\n            return typeof obj === 'function';\n        }\n    };\n\n    private reconnectAttempts = 0;\n    private sendQueue = [];\n    private onOpenCallbacks = [];\n    private onMessageCallbacks = [];\n    private onErrorCallbacks = [];\n    private onCloseCallbacks = [];\n    private readyStateConstants = {\n        'CONNECTING': 0,\n        'OPEN': 1,\n        'CLOSING': 2,\n        'CLOSED': 3,\n        'RECONNECT_ABORTED': 4\n    };\n    private normalCloseCode = 1000;\n    private reconnectableStatusCodes = [4000];\n    private socket: WebSocket;\n    private config: WebSocketConfig;\n    private dataStream: Subject<any>;\n    private internalConnectionState: number;\n    constructor(\n            private api: AtlasenseapiService,\n            private auth: AuthService,\n            private configuration: ConfigurationService\n            ) {\n        this.config = { initialTimeout: 500, maxTimeout: 300000, reconnectIfNotNormalClose: false };\n        this.dataStream = new Subject();\n        this.auth.loggedin.subscribe(\n          data => this.preconnect()\n        );\n    }\n\n    preconnect(force = false) {\n        let endpoint = this.configuration.internal_urls.canonical;\n        endpoint = endpoint + '/' + WEBSOCKET_TOKEN_URL;\n        this.api.get(endpoint)\n        .subscribe(\n          res => this.connect(res.json(), force),\n          err => console.log(err)\n        );\n    }\n\n    connect(token, force = false) {\n        let endpoint = this.configuration.internal_urls.canonical;\n        endpoint = endpoint + '/' + WEBSOCKET_URL + '?ws_token=' + token.token;\n        let self = this;\n        if (force || !this.socket || this.socket.readyState !== this.readyStateConstants.OPEN) {\n            self.socket = new WebSocket(endpoint);\n\n            self.socket.onopen = (ev: Event) => {\n                //    console.log('onOpen: %s', ev);\n                this.onOpenHandler(ev);\n            };\n            self.socket.onmessage = (ev: MessageEvent) => {\n                //   console.log('onNext: %s', ev.data);\n                self.onMessageHandler(ev);\n                this.dataStream.next(ev);\n            };\n            this.socket.onclose = (ev: CloseEvent) => {\n                //     console.log('onClose, completed');\n                self.onCloseHandler(ev);\n            };\n\n            this.socket.onerror = (ev: ErrorEvent) => {\n                //    console.log('onError', ev);\n                self.onErrorHandler(ev);\n                this.dataStream.error(ev);\n            };\n\n        }\n    }\n    send(data): Observable<any> {\n        let self = this;\n        if (this.getReadyState() !== this.readyStateConstants.OPEN\n                && this.getReadyState() !== this.readyStateConstants.CONNECTING) {\n            this.preconnect();\n        }\n        return Observable.create((observer) => {\n            if (self.socket.readyState === self.readyStateConstants.RECONNECT_ABORTED) {\n                observer.next('Socket connection has been closed');\n            } else {\n                self.sendQueue.push({ message: data });\n                self.fireQueue();\n            }\n        });\n    };\n\n    getDataStream(): Subject<any> {\n        return this.dataStream;\n    }\n\n    onOpenHandler(event: Event) {\n        this.reconnectAttempts = 0;\n        this.notifyOpenCallbacks(event);\n        this.fireQueue();\n    };\n    notifyOpenCallbacks(event) {\n        for (let i = 0; i < this.onOpenCallbacks.length; i++) {\n            this.onOpenCallbacks[i].call(this, event);\n        }\n    }\n    fireQueue() {\n        while (this.sendQueue.length && this.socket.readyState === this.readyStateConstants.OPEN) {\n            let data = this.sendQueue.shift();\n\n            this.socket.send(\n                $WebSocket.Helpers.isString(data.message) ? data.message : JSON.stringify(data.message)\n            );\n            // data.deferred.resolve();\n        }\n    }\n\n    notifyCloseCallbacks(event) {\n        for (let i = 0; i < this.onCloseCallbacks.length; i++) {\n            this.onCloseCallbacks[i].call(this, event);\n        }\n    }\n\n    notifyErrorCallbacks(event) {\n        for (let i = 0; i < this.onErrorCallbacks.length; i++) {\n            this.onErrorCallbacks[i].call(this, event);\n        }\n    }\n\n    onOpen(cb) {\n        this.onOpenCallbacks.push(cb);\n        return this;\n    };\n\n    onClose(cb) {\n        this.onCloseCallbacks.push(cb);\n        return this;\n    }\n\n    onError(cb) {\n        this.onErrorCallbacks.push(cb);\n        return this;\n    };\n\n\n    onMessage(callback, options) {\n        if (!$WebSocket.Helpers.isFunction(callback)) {\n            throw new Error('Callback must be a function');\n        }\n\n        this.onMessageCallbacks.push({\n            fn: callback,\n            pattern: options ? options.filter : undefined,\n            autoApply: options ? options.autoApply : true\n        });\n        return this;\n    }\n\n    onMessageHandler(message: MessageEvent) {\n        let self = this;\n        let currentCallback;\n        for (let i = 0; i < self.onMessageCallbacks.length; i++) {\n            currentCallback = self.onMessageCallbacks[i];\n            currentCallback.fn.apply(self, [message]);\n        }\n    };\n    onCloseHandler(event: CloseEvent) {\n        this.notifyCloseCallbacks(event);\n        if ((this.config.reconnectIfNotNormalClose && event.code !== this.normalCloseCode)\n                || this.reconnectableStatusCodes.indexOf(event.code) > -1) {\n            this.reconnect();\n        } else {\n            this.dataStream.complete();\n        }\n    };\n\n    onErrorHandler(event) {\n        this.notifyErrorCallbacks(event);\n    };\n\n\n\n\n\n    reconnect() {\n        this.close(true);\n        let backoffDelay = this.getBackoffDelay(++this.reconnectAttempts);\n        // let backoffDelaySeconds = backoffDelay / 1000;\n        // console.log('Reconnecting in ' + backoffDelaySeconds + ' seconds');\n        setTimeout(() => this.preconnect(), backoffDelay);\n        return this;\n    }\n\n    close(force: boolean) {\n        if (force || !this.socket.bufferedAmount) {\n            this.socket.close();\n        }\n        return this;\n    };\n    // Exponential Backoff Formula by Prof. Douglas Thain\n    // http://dthain.blogspot.co.uk/2009/02/exponential-backoff-in-distributed.html\n    getBackoffDelay(attempt) {\n        let R = Math.random() + 1;\n        let T = this.config.initialTimeout;\n        let F = 2;\n        let N = attempt;\n        let M = this.config.maxTimeout;\n\n        return Math.floor(Math.min(R * T * Math.pow(F, N), M));\n    };\n\n    setInternalState(state) {\n        if (Math.floor(state) !== state || state < 0 || state > 4) {\n            throw new Error('state must be an integer between 0 and 4, got: ' + state);\n        }\n\n        this.internalConnectionState = state;\n\n    }\n\n    /**\n     * Could be -1 if not initzialized yet\n     * @returns {number}\n     */\n    getReadyState() {\n        if (this.socket == null) {\n            return -1;\n        }\n        return this.internalConnectionState || this.socket.readyState;\n    }\n}\n\nexport interface WebSocketConfig {\n    initialTimeout: number;\n    maxTimeout: number;\n    reconnectIfNotNormalClose: boolean;\n}\n"]}