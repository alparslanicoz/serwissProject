{"version":3,"file":"file-size.pipe.js","sourceRoot":"","sources":["../../../src/lib/custom-pipes/file-size.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAuD;AAGvD,IAAa,YAAY;IADzB;QAGU,UAAK,GAAG;YACd,OAAO;YACP,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;SACL,CAAC;IAaJ,CAAC;IAZE,gCAAS,GAAT,UAAU,KAAiB,EAAE,SAAqB;QAAxC,sBAAA,EAAA,SAAiB;QAAE,0BAAA,EAAA,aAAqB;QACjD,EAAE,CAAC,CAAE,KAAK,CAAE,UAAU,CAAE,MAAM,CAAC,KAAK,CAAC,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,KAAK,CAAG,CAAC;YAAC,MAAM,CAAC,GAAG,CAAC;QAE7E,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,OAAQ,KAAK,IAAI,IAAI,EAAG,CAAC;YACvB,KAAK,IAAI,IAAI,CAAC;YACd,IAAI,EAAG,CAAC;QACV,CAAC;QAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,CAAE,SAAS,CAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;IACjE,CAAC;IACH,mBAAC;AAAD,CAAC,AAtBD,IAsBC;AAtBY,YAAY;IADxB,WAAI,CAAC,EAAE,IAAI,EAAE,cAAc,EAAC,CAAC;;GACjB,YAAY,CAsBxB;AAtBY,oCAAY","sourcesContent":["import { Pipe, PipeTransform }    from '@angular/core';\n\n@Pipe({ name: 'fileSizePipe'})\nexport class FileSizePipe implements PipeTransform  { \n\n  private units = [\n    'bytes',\n    'KB',\n    'MB',\n    'GB',\n    'TB',\n    'PB'\n  ];\n   transform(bytes: number = 0, precision: number = 2 ) : string {\n    if ( isNaN( parseFloat( String(bytes) )) || ! isFinite( bytes ) ) return '?';\n\n    let unit = 0;\n\n    while ( bytes >= 1024 ) {\n      bytes /= 1024;\n      unit ++;\n    }\n\n    return bytes.toFixed( + precision ) + ' ' + this.units[ unit ];\n  }\n}"]}