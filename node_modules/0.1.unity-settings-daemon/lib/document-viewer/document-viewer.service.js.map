{"version":3,"file":"document-viewer.service.js","sourceRoot":"","sources":["../../../src/lib/document-viewer/document-viewer.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA2C;AAG3C,uCAAqC;AAGrC,0DAAsD;AAGtD,IAAa,qBAAqB;IAAlC;IAsBA,CAAC;IArBG,4CAAY,GAAZ;QACI,MAAM,CAAC,0BAAU,CAAC;IACtB,CAAC;IAWD,2CAAW,GAAX,UAAY,EAAU;QAClB,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACtC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,EAAE,KAAK,EAAE,EAApB,CAAoB,CAAC,CAAC;IAChE,CAAC;IACO,2CAAW,GAAnB,UAAoB,KAAU;QAC1B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAClD,CAAC;IACL,4BAAC;AAAD,CAAC,AAtBD,IAsBC;AAtBY,qBAAqB;IADjC,iBAAU,EAAE;;GACA,qBAAqB,CAsBjC;AAtBY,sDAAqB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { ASDocument } from '../document';\nimport { MDOCUMENTS } from '../results/mock-document';\n\n@Injectable()\nexport class DocumentViewerService {\n    getDocuments(): ASDocument[] {\n        return MDOCUMENTS;\n    }\n\n   /* private documentViewerUrl = 'document_list_test'; //URL to web api\n    constructor(private http: Http) { }\n    getDocuments(): Promise<Document[]> {\n        return this.http.get(this.documentViewerUrl)\n            .toPromise()\n            .then(response => response.json().data as Document[])\n            .catch(this.handleError);\n    }*/\n   \n    getDocument(id: number): ASDocument {\n        let asdocuments = this.getDocuments();\n        return asdocuments.find(asdocument => asdocument.id === id);\n    }\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error); // for demo purposes only\n        return Promise.reject(error.message || error);\n    }\n}"]}