"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var context_menu_component_1 = require("./context-menu.component");
var context_menu_service_1 = require("./context-menu.service");
var core_1 = require("@angular/core");
var ContextMenuAttachDirective = (function () {
    function ContextMenuAttachDirective(contextMenuService) {
        this.contextMenuService = contextMenuService;
    }
    ContextMenuAttachDirective.prototype.onContextMenu = function (event) {
        this.contextMenuService.show.next({
            contextMenu: this.contextMenu,
            event: event,
            item: this.contextMenuSubject,
        });
        event.preventDefault();
        event.stopPropagation();
    };
    return ContextMenuAttachDirective;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], ContextMenuAttachDirective.prototype, "contextMenuSubject", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", context_menu_component_1.ContextMenuComponent)
], ContextMenuAttachDirective.prototype, "contextMenu", void 0);
__decorate([
    core_1.HostListener('contextmenu', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [MouseEvent]),
    __metadata("design:returntype", void 0)
], ContextMenuAttachDirective.prototype, "onContextMenu", null);
ContextMenuAttachDirective = __decorate([
    core_1.Directive({
        selector: '[contextMenu]',
    }),
    __metadata("design:paramtypes", [context_menu_service_1.ContextMenuService])
], ContextMenuAttachDirective);
exports.ContextMenuAttachDirective = ContextMenuAttachDirective;
//# sourceMappingURL=context-menu.attach.directive.js.map