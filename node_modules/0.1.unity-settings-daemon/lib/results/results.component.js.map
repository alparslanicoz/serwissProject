{"version":3,"file":"results.component.js","sourceRoot":"","sources":["../../../src/lib/results/results.component.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { AtlasenseapiService } from '../api.service';\nimport { ASDocument } from '../document';\nimport { Filter, FilterItem } from '../filter';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { MDOCUMENTS } from './mock-document';\n\nimport 'rxjs/add/operator/toPromise';\nimport { ContextMenuComponent } from '../context-menu/context-menu.component';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\n\nexport class ResultsComponent implements OnInit {\n\n  documents: ASDocument[] = [];\n  selectedDocument: ASDocument;\n  promisedDocument: ASDocument;\n  totalResults = 0;\n  sortType = \"Last Modified\";\n  sortDirection = \"desc\";\n  viewType = \"List\";\n\n\n  dataSourceFilterItems: FilterItem [] = [{itemName: \"Gmail\", selected: true},\n                                          {itemName: \"Slack\", selected: false},\n                                          {itemName: \"Confluence\", selected: false},\n                                          {itemName: \"Facebook\", selected: false},\n                                          ];\n\n  groupFilterItems: FilterItem [] = [{itemName: \"Group1\", selected: false},\n                                     {itemName: \"Group2\", selected: false},\n                                     {itemName: \"Group3\", selected: false},\n                                     {itemName: \"Group4\", selected: false},\n                                      ];\n  categoryFilterItems: FilterItem [] = [{itemName: \"Cat1\", selected: false},\n                                        {itemName: \"Cat2\", selected: false},\n                                        {itemName: \"Cat3\", selected: false},\n                                        {itemName: \"Cat4\", selected: false},\n                                        ];\n  peopleFilterItems: FilterItem [] = [{itemName: \"Aditya\", selected: false},\n                                      {itemName: \"Aria\", selected: false},\n                                      {itemName: \"Nicole\", selected: false},\n                                      {itemName: \"Mayda\", selected: false},\n                                      ];                                         \n  emptyFilterItems: FilterItem[];\n\n  filters: Filter[] = [{filterName: \"Data Sources\", filterType: \"CheckBox\", open: true, filterData: this.dataSourceFilterItems},\n             {filterName: \"Groups\", filterType: \"CheckBox\", open: false, filterData: this.groupFilterItems},\n             {filterName: \"Date Range\", filterType: \"Date\", open: true, filterData: this.emptyFilterItems},\n             {filterName: \"Categories\", filterType: \"CheckBox\", open: false, filterData: this.categoryFilterItems},\n             {filterName: \"People\", filterType: \"CheckBox\", open: false, filterData: this.peopleFilterItems}];\n\n\n  constructor(private documentViewerService: AtlasenseapiService) { }\n\n  ngOnInit(): void {\n      // this.documents = this.documentViewerService.getDocuments();\n      this.documents = MDOCUMENTS;\n      this.totalResults = MDOCUMENTS.length;\n  }\n\n  onSelect(document: ASDocument): void {\n      this.selectedDocument = document;\n  }\n\n  toggleViewType(): void {\n      if (this.viewType === 'List') {\n        this.viewType = 'Grid';\n      } else {\n        this.viewType = 'List';\n      }\n  }\n\n  getTestDoc(): void {\n    this.documentViewerService.get(`http://130.211.100.71/zeo0/account1/ramon@atlasense.com/3a663ff54eac4e71acd3f6b7ea983fb1/0188345893c24ee29ae8b0f881ed8474`).toPromise()\n      .then(response => response.json().data as ASDocument)\n      .catch(this.handleError);\n  }\n  private handleError(error: any): Promise<any> {\n  console.error('An error occurred', error); // for demo purposes only\n  return Promise.reject(error.message || error);\n  }\n  public items = [\n      { name: 'John', otherProperty: 'Foo' },\n      { name: 'Joe', otherProperty: 'Bar' }\n  ];\n  @ViewChild('basicMenu') public basicMenu: ContextMenuComponent;\n}\n"]}