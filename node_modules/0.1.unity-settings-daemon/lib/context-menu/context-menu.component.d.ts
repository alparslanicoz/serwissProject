import { AfterContentInit, ChangeDetectorRef, EventEmitter, QueryList } from '@angular/core';
import { ContextMenuService, IContextMenuClickEvent } from './context-menu.service';
import { ContextMenuItemDirective } from './context-menu.item.directive';
export interface ILinkConfig {
    click: (item: any, $event?: MouseEvent) => void;
    enabled?: (item: any) => boolean;
    html: (item: any) => string;
}
export declare class ContextMenuComponent implements AfterContentInit {
    private _contextMenuService;
    private changeDetector;
    close: EventEmitter<any>;
    menuItems: QueryList<ContextMenuItemDirective>;
    visibleMenuItems: ContextMenuItemDirective[];
    links: ILinkConfig[];
    isShown: boolean;
    isOpening: boolean;
    item: any;
    private mouseLocation;
    constructor(_contextMenuService: ContextMenuService, changeDetector: ChangeDetectorRef);
    readonly locationCss: any;
    clickedOutside(): void;
    ngAfterContentInit(): void;
    isMenuItemEnabled(menuItem: ContextMenuItemDirective): boolean;
    isMenuItemVisible(menuItem: ContextMenuItemDirective): boolean;
    evaluateIfFunction(value: any): any;
    isDisabled(link: ILinkConfig): boolean;
    execute(link: ILinkConfig, $event?: MouseEvent): void;
    onMenuEvent(menuEvent: IContextMenuClickEvent): void;
    setVisibleMenuItems(): void;
    showMenu(): void;
    hideMenu(): void;
}
