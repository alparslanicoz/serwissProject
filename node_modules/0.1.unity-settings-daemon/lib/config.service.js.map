{"version":3,"file":"config.service.js","sourceRoot":"","sources":["../../src/lib/config.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { Urls } from './configuration';\nimport { Observable } from 'rxjs/Observable';\nimport { Http, Headers, Response } from '@angular/http';\n\nconst ENDPOINT_GET_URLS = '/oauth/get_scope_urls';\n\n@Injectable()\nexport class ConfigurationService {\n\n  config: Configuration;\n  internal_urls: Urls;\n  timerRefreshToken: any;\n\n\n  constructor(\n      public http: Http,\n      @Inject('api.config') private apiConfig: Configuration) {\n    this.config = apiConfig;\n    this.internal_urls = new Urls()\n    this.loadUrlsFromAuth().subscribe(\n      res => this.saveUrls(res),\n      err => console.log(err)\n    )\n  }\n\n  loadUrlsFromAuth(): Observable<Response>  {\n    let body = JSON.stringify(\n      {\n        'client_id': this.config.client_id,\n        'scope': this.config.account\n      }\n    );\n    return this.http.post(\n      this.config.bootstrap_url + ENDPOINT_GET_URLS,\n      body\n    );\n  }\n\n  saveUrls(res) {\n    let value = res.json();\n    let urls = value[this.config.account];\n    for (let url of urls) {\n      let url_array = url.split('#');\n      if (url_array[0] === 'canonical') {\n        if (this.config.force_local !== undefined) {\n          this.internal_urls.canonical = 'http://localhost:8080/zodb1/' + this.config.account;\n        } else {\n          this.internal_urls.canonical = url_array[1];\n        }\n      }\n      if (url_array[0] === 'proxy') {\n        if (this.config.force_local !== undefined) {\n          this.internal_urls.proxy = 'http://localhost:8080/zodb1/' + this.config.account;\n        } else {\n          this.internal_urls.proxy = url_array[1];\n        }\n      }\n      if (url_array[0] === 'websocket') {\n        if (this.config.force_local !== undefined) {\n          this.internal_urls.websocket = 'http://localhost:8080/zodb1/' + this.config.account;\n        } else {\n          this.internal_urls.websocket = url_array[1];\n        }\n      }\n    }\n  }\n\n  getWSURL() {\n    return this.internal_urls.websocket;\n  }\n\n  getCanonicalURL() {\n    return this.internal_urls.canonical;\n  }\n\n  getAuthURL() {\n    return this.config.bootstrap_url;\n  }\n\n  getProxyURL() {\n    return this.internal_urls.proxy;\n  }\n\n  save_config() {\n    localStorage.setItem('atlasense_config', JSON.stringify(this.internal_urls));\n  }\n\n}\n"]}